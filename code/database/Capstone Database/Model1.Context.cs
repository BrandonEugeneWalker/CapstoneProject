//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Capstone_Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class cs4982s20dEntities : DbContext
    {
        public cs4982s20dEntities()
            : base("name=cs4982s20dEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<ItemRental> ItemRentals { get; set; }
        public virtual DbSet<ItemReturn> ItemReturns { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Stock> Stocks { get; set; }
    
        public virtual int p_createMemberOrder(Nullable<int> selectedStockId, Nullable<int> selectedMemberId)
        {
            var selectedStockIdParameter = selectedStockId.HasValue ?
                new ObjectParameter("selectedStockId", selectedStockId) :
                new ObjectParameter("selectedStockId", typeof(int));
    
            var selectedMemberIdParameter = selectedMemberId.HasValue ?
                new ObjectParameter("selectedMemberId", selectedMemberId) :
                new ObjectParameter("selectedMemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_createMemberOrder", selectedStockIdParameter, selectedMemberIdParameter);
        }
    
        public virtual ObjectResult<p_retrieveAllProducts_Result> p_retrieveAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_retrieveAllProducts_Result>("p_retrieveAllProducts");
        }
    
        public virtual ObjectResult<p_retrieveAvailableProducts_Result> p_retrieveAvailableProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_retrieveAvailableProducts_Result>("p_retrieveAvailableProducts");
        }
    
        public virtual ObjectResult<p_retrieveProductsWaitingReturn_Result> p_retrieveProductsWaitingReturn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_retrieveProductsWaitingReturn_Result>("p_retrieveProductsWaitingReturn");
        }
    
        public virtual ObjectResult<p_retrieveProductsWaitingShipment_Result> p_retrieveProductsWaitingShipment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_retrieveProductsWaitingShipment_Result>("p_retrieveProductsWaitingShipment");
        }
    
        public virtual ObjectResult<p_retrieveRentedCount_Result> p_retrieveRentedCount(Nullable<int> selectedMemberId)
        {
            var selectedMemberIdParameter = selectedMemberId.HasValue ?
                new ObjectParameter("selectedMemberId", selectedMemberId) :
                new ObjectParameter("selectedMemberId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_retrieveRentedCount_Result>("p_retrieveRentedCount", selectedMemberIdParameter);
        }
    
        public virtual ObjectResult<p_searchProductsName_Result> p_searchProductsName(string nameSearch)
        {
            var nameSearchParameter = nameSearch != null ?
                new ObjectParameter("nameSearch", nameSearch) :
                new ObjectParameter("nameSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_searchProductsName_Result>("p_searchProductsName", nameSearchParameter);
        }
    
        public virtual ObjectResult<p_searchProductsNameType_Result> p_searchProductsNameType(string nameSearch, string typeSearch)
        {
            var nameSearchParameter = nameSearch != null ?
                new ObjectParameter("nameSearch", nameSearch) :
                new ObjectParameter("nameSearch", typeof(string));
    
            var typeSearchParameter = typeSearch != null ?
                new ObjectParameter("typeSearch", typeSearch) :
                new ObjectParameter("typeSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_searchProductsNameType_Result>("p_searchProductsNameType", nameSearchParameter, typeSearchParameter);
        }
    
        public virtual ObjectResult<p_searchProductsType_Result> p_searchProductsType(string typeSearch)
        {
            var typeSearchParameter = typeSearch != null ?
                new ObjectParameter("typeSearch", typeSearch) :
                new ObjectParameter("typeSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_searchProductsType_Result>("p_searchProductsType", typeSearchParameter);
        }
    
        public virtual int p_updateMemberReturn(Nullable<int> selectedStockId)
        {
            var selectedStockIdParameter = selectedStockId.HasValue ?
                new ObjectParameter("selectedStockId", selectedStockId) :
                new ObjectParameter("selectedStockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_updateMemberReturn", selectedStockIdParameter);
        }
    
        public virtual int p_updateRentalShipped(Nullable<int> selectedStockId)
        {
            var selectedStockIdParameter = selectedStockId.HasValue ?
                new ObjectParameter("selectedStockId", selectedStockId) :
                new ObjectParameter("selectedStockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_updateRentalShipped", selectedStockIdParameter);
        }
    
        public virtual int p_updateReturnProcessed(Nullable<int> selectedStockId)
        {
            var selectedStockIdParameter = selectedStockId.HasValue ?
                new ObjectParameter("selectedStockId", selectedStockId) :
                new ObjectParameter("selectedStockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_updateReturnProcessed", selectedStockIdParameter);
        }
    }
}
