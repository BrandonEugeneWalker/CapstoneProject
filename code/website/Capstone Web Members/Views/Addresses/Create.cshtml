@model Capstone_Database.Model.Address

@{
    ViewBag.Title = "Create Address";
}

<h2>Create Address</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        Street Address
        <div class="col-md-10">
            @Html.EditorFor(model => model.address1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        Secondary Address
        <div class="col-md-10">
            @Html.EditorFor(model => model.address2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address2, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        City
        <div class="col-md-10">
            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        State
        <div class="col-md-10">
            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        Zip Code
        <div class="col-md-10">
            @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
